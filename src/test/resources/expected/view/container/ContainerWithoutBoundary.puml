@startuml(id=ContainerWithoutBoundary)
!define GILBARBARA_PNG_URL https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/v1.1/pngs
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!includeurl <azure/AzureCommon>
!includeurl <azure/AIMachineLearning/AzureTranslatorText>
!includeurl <logos/android-icon>
!includeurl <logos/docker-icon>
!includeurl <tupadr3/devicons2/graphql>

title My Software System - Containers
caption Test container view

LAYOUT_TOP_DOWN()

AddRelTag("async relationship", $lineStyle=DashedLine(), $legendText=async relationship (dashed))

Person_Ext(AndroidUser, "Android User", "some Android user", $sprite="android-icon")
ContainerQueue_Ext(Broker.mytopic, "my.topic", "", "external topic", $sprite="img:GILBARBARA_PNG_URL/kafka.png")
Container_Ext(GraphQL.ExternalSchema, "External Schema", "", "Schema provided by another team")
Container(GraphQL.InternalSchema, "Internal Schema", "", "Schema provided by our app")
WithoutPropertyHeader()
AddProperty("prop 1", "value 1")
Person(Maintainer, "Maintainer", "some employee", $link="https://www.google.de")
Container(MySoftwareSystem.App, "App", "Some Service", "Azure app", $sprite="AzureTranslatorText,color=#ffffff")
WithoutPropertyHeader()
AddProperty("prop 1", "value 1")
Container(MySoftwareSystem.BackendApp, "Backend App", "Kotlin", "some backend app", $sprite="docker-icon", $link="https://www.google.de")
ContainerDb(MySoftwareSystem.Database, "Database", "postgres", "some database", $sprite="img:GILBARBARA_PNG_URL/postgresql.png")

Rel(AndroidUser, MySoftwareSystem.App, "uses app")
Rel(MySoftwareSystem.App, GraphQL.InternalSchema, "request data using", "GraphQL", $sprite="graphql", $link="https://graphql.org/")
Rel_R(MySoftwareSystem.BackendApp, MySoftwareSystem.Database, "CRUD", "JPA")
Rel(MySoftwareSystem.BackendApp, GraphQL.InternalSchema, "provides subgraph to")
Rel(MySoftwareSystem.BackendApp, Broker.mytopic, "reads topic", "Avro", $tags="async relationship")
Rel_U(GraphQL.ExternalSchema, GraphQL.InternalSchema, "extends schema")
Rel(Maintainer, MySoftwareSystem.BackendApp, "Admin UI", "REST")
@enduml