@startuml(id=ComponentWithContainers)
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!includeurl <logos/kotlin-icon>
!includeurl <logos/postgresql>
!includeurl <tupadr3/devicons2/rocksdb>

title My Software System - New Backend App - Components
caption Test component view

SHOW_PERSON_OUTLINE()
LAYOUT_LEFT_RIGHT()

AddRelTag("async relationship", $lineStyle=DashedLine(), $legendText=async relationship (dashed))

ContainerDb(MySoftwareSystem.Database, "Database", "postgres", "some database", $sprite="postgresql")
Container(MySoftwareSystem.FrontendApp, "Frontend App", "TS", "some frontend", "")
ComponentDb(MySoftwareSystem.NewBackendApp.Cache, "Cache", "RocksDB", "In Memory DB", $sprite="rocksdb", $link="https://google.de")
WithoutPropertyHeader()
AddProperty("jdbcUrl", "someurl")
Component(MySoftwareSystem.NewBackendApp.MyRepo, "MyRepo", "Kotlin, JDBC", "Provides CRUD operations for data", "", $tags="repo+persistence")
Component(MySoftwareSystem.NewBackendApp.MyRestController, "MyRestController", "REST", "Provides data via rest", "")
Component(MySoftwareSystem.NewBackendApp.MyService, "MyService", "", "Does implement some logic", $sprite="kotlin-icon", $link="https://google.de")
Rel(MySoftwareSystem.NewBackendApp.MyRepo, MySoftwareSystem.Database, "gets data from")
Rel(MySoftwareSystem.NewBackendApp.MyRestController, MySoftwareSystem.NewBackendApp.MyService, "calls")
Rel(MySoftwareSystem.NewBackendApp.MyService, MySoftwareSystem.NewBackendApp.Cache, "uses")
Rel(MySoftwareSystem.NewBackendApp.MyService, MySoftwareSystem.NewBackendApp.MyRepo, "gets notified", $tags="async relationship")

skinparam linetype ortho
skinparam nodesep 100
skinparam ranksep 150
SHOW_LEGEND(true)

@enduml